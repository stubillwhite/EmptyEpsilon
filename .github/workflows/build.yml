name: Build

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    if: ${{ false }} # TODO: Disabled

    steps:
    - name: Dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install build-essential libsfml-dev cmake git libsdl2-dev mingw-w64 ninja-build p7zip-full unzip wget zip
        # sudo apt install build-essential cmake python3-minimal mingw-w64 ninja-build p7zip-full

    - name: Checkout EmptyEpsilon
      uses: actions/checkout@v3
      with:
        path: EmptyEpsilon

    - name: Checkout SeriousProton
      uses: actions/checkout@v3
      with:
        repository: tdelc/SeriousProton
        path: SeriousProton
        fetch-depth: 0

    - name: Switch to correct SeriousProton version
      run: |
        cd SeriousProton
        git checkout b068a01

    - name: Build
      run: |
        mkdir _build_linux
        cd _build_linux
        cmake ../EmptyEpsilon -DSERIOUS_PROTON_DIR=../SeriousProton
        make

  ########################################
  # Windows (cross-compile)
  ########################################

  win32-cross:
    name: Win32 (cross-compile)
    runs-on: ubuntu-latest

    steps:
    - name: Dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install build-essential cmake git libsdl2-dev libsfml-dev mingw-w64 ninja-build p7zip-full unzip wget zip
        # sudo apt install build-essential cmake python3-minimal mingw-w64 ninja-build p7zip-full

    - name: Checkout EmptyEpsilon
      uses: actions/checkout@v3
      with:
        path: EmptyEpsilon

    - name: Checkout SeriousProton
      uses: actions/checkout@v3
      with:
        repository: tdelc/SeriousProton
        path: SeriousProton
        fetch-depth: 0

    - name: Switch to correct SeriousProton version
      run: |
        cd SeriousProton
        git checkout b068a01

    - name: Build
      id: buildStep
      run: |
        mkdir _build_win32
        cd _build_win32
        cmake ../EmptyEpsilon -G Ninja -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_TOOLCHAIN_FILE=../EmptyEpsilon/cmake/mingw.toolchain -DSERIOUS_PROTON_DIR=../SeriousProton -DWARNING_IS_ERROR=1
        ninja package

    - name: Debug if build failes
      if: ${{ failure() && steps.buildStep.outcome == 'failure'}}
      run: |
        find . -name link.txt

  ########################################
  # macOS
  ########################################

  macos:
    name: macOS
    runs-on: macos-latest
    if: ${{ false }} # TODO: Disabled

    steps:
    - name: Dependencies
      run: |
        brew install cmake sdl2 ninja sfml glm libopusenc

    - name: Checkout EmptyEpsilon
      uses: actions/checkout@v3
      with:
        path: EmptyEpsilon

    - name: Checkout SeriousProton
      uses: actions/checkout@v3
      with:
        repository: tdelc/SeriousProton
        path: SeriousProton
        fetch-depth: 0

    - name: Switch to correct SeriousProton version
      run: |
        cd SeriousProton
        git checkout b068a01

    - name: Build
      run: |
        mkdir -p _build_macos
        cd _build_macos
        cmake ../EmptyEpsilon -G Ninja -DSERIOUS_PROTON_DIR=../SeriousProton -DCMAKE_INSTALL_PREFIX=. -DWARNING_IS_ERROR=1
        ninja
        ninja install

    - name: Zip artifact for deployment
      run: |
        zip -r emptyepsilon-macos.zip _build_macos/EmptyEpsilon.app

    - name: Publish
      if: ${{ false }} # TODO: Disabled
      uses: actions/upload-artifact@v4
      with:
        name: EmptyEpsilon (macOS)
        path: emptyepsilon-macos.zip

  ########################################
  # Windows
  ########################################

  windows:
    name: Windows
    runs-on: windows-latest
    if: ${{ false }} # TODO: Disabled

    steps:
    - name: Dependencies
      run: |
        $sdl_version = "2.0.16"
        $sdl_link = "https://libsdl.org/release/SDL2-devel-$sdl_version-VC.zip"
        $sdl_zip = "$env:GITHUB_WORKSPACE/sdl-dev.zip"
        (new-object System.Net.WebClient).DownloadFile($sdl_link, $sdl_zip)
        Expand-Archive -LiteralPath $sdl_zip -DestinationPath "$env:GITHUB_WORKSPACE/externals"
        $sdl_config = @"
        set(flavor x86)
        if(CMAKE_SIZEOF_VOID_P EQUAL 8)
            set(flavor x64)
        endif()
        set(_SDL2_prefix "`${CMAKE_CURRENT_LIST_DIR}/SDL2-$sdl_version")

        add_library(SDL2::SDL2main STATIC IMPORTED)
        set_target_properties(SDL2::SDL2main PROPERTIES
        IMPORTED_LOCATION "`${_SDL2_prefix}/lib/`${flavor}/SDL2main.lib"
        )

        add_library(SDL2::SDL2 SHARED IMPORTED)
        set_target_properties(SDL2::SDL2 PROPERTIES
        IMPORTED_LOCATION "`${_SDL2_prefix}/lib/`${flavor}/SDL2.dll"
        IMPORTED_IMPLIB "`${_SDL2_prefix}/lib/`${flavor}/SDL2.lib"
        INTERFACE_INCLUDE_DIRECTORIES "`${_SDL2_prefix}/include"
        )

        target_link_libraries(SDL2::SDL2 INTERFACE SDL2::SDL2main)
        "@
        Set-Content -Path "$env:GITHUB_WORKSPACE/externals/sdl2-config.cmake" -Value $sdl_config
        Get-Content "$env:GITHUB_WORKSPACE/externals/sdl2-config.cmake"

    - name: Checkout EmptyEpsilon
      uses: actions/checkout@v3
      with:
        path: EmptyEpsilon

    - name: Checkout SeriousProton
      uses: actions/checkout@v3
      with:
        repository: tdelc/SeriousProton
        path: SeriousProton
        fetch-depth: 0

    - name: Switch to correct SeriousProton version
      run: |
        cd SeriousProton
        git checkout b068a01

    - name: Build
      run: |
        cmake -E make_directory ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        cmake ../EmptyEpsilon -G "Visual Studio 17 2022" -A Win32 -DSDL2_DIR:PATH="$env:GITHUB_WORKSPACE/externals" -DSERIOUS_PROTON_DIR="../SeriousProton"
        cmake --build . --config Release --target package

      # - name: Zip artifact for deployment
      #   run: |
      #     zip -r emptyepsilon-macos.zip _build_macos/EmptyEpsilon.app
      #
      # - name: Publish
      #   if: ${{ false }} # TODO: Disabled
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: EmptyEpsilon (macOS)
      #     path: emptyepsilon-macos.zip
